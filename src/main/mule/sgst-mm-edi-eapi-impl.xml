<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:compression="http://www.mulesoft.org/schema/mule/compression" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/compression http://www.mulesoft.org/schema/mule/compression/current/mule-compression.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	<json-logger:config name="JSON_Logger_Config" doc:name="JSON Logger Config" doc:id="89c20580-939b-42d3-b3d6-ed6f1dcf9751" environment="${mule.env}" />
	<sub-flow name="sgst-mm-edi-eapi-impl_decompress-flow" doc:id="3b7da78d-ac82-4841-8bd3-b0aa89b53622" >
		<try doc:name="Try" doc:id="7fffe8a5-d6b4-4258-b265-f17eb3fe83a5" >
			<compression:decompress doc:name="Decompress the File" doc:id="1b447af2-ed40-4559-bcb0-f77619f5e248" target="decompressedFile">
			<compression:compressed><![CDATA[#[%dw 2.0
output application/java
input payload multipart/form-data
---
payload.parts.'File'.content]]]></compression:compressed>
			<compression:decompressor>
				<compression:zip-decompressor />
			</compression:decompressor>
		</compression:decompress>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="40804a1a-98af-4a57-a3df-6b2f28420143" type="ANY">
					<flow-ref doc:name="Flow Reference" doc:id="ead0cead-1fb2-4cb8-b08c-5b2b5a347e4a" name="global-config-propagate-error"/>
				</on-error-propagate>
			</error-handler>
		</try>
		<json-logger:logger doc:name="Log - Decompress status" doc:id="56bfab20-01ba-49cd-8998-ec5c998467cd" config-ref="JSON_Logger_Config" message='#["Decompression of file is Successful for correlation Id " ++ vars.TransactionID]' correlationId="#[vars.TransactionID]" tracePoint="AFTER_TRANSFORM">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.eventAuditMessage) 
}]]]></json-logger:content>
		</json-logger:logger>
	</sub-flow>
	<sub-flow name="sgst-mm-edi-impl-api-impl-backUp-flow" doc:id="58cb3365-7738-4aec-91e6-391c2c512f1a" >
		<try doc:name="Try" doc:id="c7699384-8db6-43d5-8938-db682c75afa7" >
			<until-successful maxRetries="${http.pcs.reconnection.count}" doc:name="Until Successful" doc:id="537a6523-462a-45a4-bafe-c020fa9bf6e7" millisBetweenRetries="${http.pcs.reconnection.frequency}">
			<http:request method="POST" doc:name="Call PCS Backup" doc:id="3ae19d80-071e-4755-a80c-0529366c9f06" config-ref="HTTP_Request_For_BackUPFile" path="${http.utilities.papi.path.backup}" outputMimeType="multipart/form-data">
			<http:headers><![CDATA[#[{
"direction": Mule::p('api.flowDirection'),
"correlationID" :vars.TransactionID,
"externalSystem" : vars.fileDetails.externalSystem,
"fileType" : vars.sapiHttpPath replace "/" with "" ,
"fileName" :vars.fileDetails.flatFileName,
"fileExtension": if(vars.fileDetails.flatFileExtension != null ) (vars.fileDetails.flatFileExtension replace "." with "") else vars.fileDetails.flatFileExtension,
"subsidiary": vars.fileDetails.subsidiary,
"X-Client-ID": Mule::p('http.utilities.papi.client_id'),
"X-Client-Secret": Mule::p('http.utilities.papi.client_secret'),
}]]]></http:headers>
		</http:request>
		</until-successful>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="c40313eb-06ec-4ad1-b658-a17d1ac39226" >
					<flow-ref doc:name="Flow Reference" doc:id="23660e94-9131-465e-85ed-c57aa7c1f0ab" name="global-config-propagate-error"/>
				</on-error-propagate>
			</error-handler>
		</try>
		<json-logger:logger doc:name="Log - Backup Status" doc:id="d4475cb8-572c-454c-8399-05262661165c" config-ref="JSON_Logger_Config" message='#["File backup to PCS Successful for correlation Id " ++ vars.TransactionID]' tracePoint="AFTER_REQUEST" correlationId="#[vars.TransactionID]">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.eventAuditMessage) 
}]]]></json-logger:content>
		</json-logger:logger>
	</sub-flow>
	<sub-flow name="sgst-mm-edi-eapi-impl-sapi-flow" doc:id="b879f7c5-f4b6-4f3e-8e8f-200456b9b8aa" >
		<ee:transform doc:name="HTTP Configurations" doc:id="50f4a0d1-9e4a-4841-b36b-594bed382d8b" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpConfig" ><![CDATA[output application/json
var dynamicHost="http."++ lower(vars.fileDetails.subsidiary replace "-" with "") ++ ".sapi.host"
var dynamicPort="http."++ lower(vars.fileDetails.subsidiary replace "-" with "") ++ ".sapi.port"
var dynamicPath= "http."++ lower(vars.fileDetails.subsidiary replace "-" with "") ++ ".sapi.basepath"
var dynamicClientId="http."++ lower(vars.fileDetails.subsidiary replace "-" with "") ++ ".sapi.client_id"
var dynamicClientSecret= "http."++ lower(vars.fileDetails.subsidiary replace "-" with "") ++ ".sapi.client_secret"

---

if( Mule::p('routing.systems.sftp') contains vars.fileDetails.externalSystem){ 
	host:  Mule::p(dynamicHost),
	port:  Mule::p(dynamicPort),
	path:  Mule::p(dynamicPath),
	client_id: Mule::p(dynamicClientId),
	client_secret: Mule::p(dynamicClientSecret)
	
}
	
else 
	if( Mule::p('routing.systems.hulft') contains vars.fileDetails.externalSystem){
	host:  Mule::p('http.hulft.sapi.host'),
	port:  Mule::p('http.hulft.sapi.port'),
	path:  Mule::p('http.hulft.sapi.basepath')
}
else
{
}


]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<try doc:name="Try" doc:id="c12551b6-a1d8-4bee-bde0-2f948b9d52d7" >
			<until-successful maxRetries="${http.sapi.reconnection.count}" doc:name="Until Successful" doc:id="952dee66-be8c-4dd6-a1a8-b15ca32a6920" millisBetweenRetries="${http.sapi.reconnection.frequency}">
			<http:request method="POST" doc:name="Call SAPI/PAPI - Post File" doc:id="003eac06-6662-4b19-a44c-b10362c484b9" config-ref="HTTP_Request_For_SAPI" outputMimeType="multipart/form-data" path="#[vars.sapiHttpPath]" requestStreamingMode="ALWAYS">
			<http:headers><![CDATA[#[output application/java
---
{
	"correlationID" : vars.TransactionID,
	"X-Client-Secret" : vars.httpConfig.client_id,
    "Accept-Encoding" : "zip",
    "X-Client-ID" : vars.httpConfig.client_secret}]]]></http:headers>
		</http:request>
		</until-successful>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="581fac44-340e-448d-a868-3c13c7f6d2a1" type="ANY">
					<flow-ref doc:name="Flow Reference" doc:id="fdcf660a-9adc-4a4b-b0df-28b84f2621af" name="global-config-propagate-error"/>
				</on-error-propagate>
			</error-handler>
		</try>
		<json-logger:logger doc:name="Log - SAPI Call Status" doc:id="05c40f06-7fae-41e1-9d4a-e71bc988a1f5" config-ref="JSON_Logger_Config" message='#["File published successfully to SAPI for correlation ID"  ++ vars.TransactionID]' tracePoint="AFTER_REQUEST" correlationId="#[vars.TransactionID]">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.eventAuditMessage) 
}]]]></json-logger:content>
		</json-logger:logger>
	</sub-flow>
	<sub-flow name="sgst-mm-edi-eapi-impl-flow" doc:id="1e8db879-7c4a-4cbc-8cf4-7b59b3a5f4eb" >
		<ee:transform doc:name="initialise - Variables" doc:id="dfbb19b0-c67c-46d0-8274-e31fae46b1e1">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="sapiHttpPath" ><![CDATA[%dw 2.0
output application/java
---
attributes.maskedRequestPath]]></ee:set-variable>
				<ee:set-variable variableName="TransactionID" ><![CDATA[uuid()]]></ee:set-variable>
				<ee:set-variable resource="dwl/ediMsgHeader.dwl" variableName="EDIMsgHeader" />
				<ee:set-variable variableName="fileDetails" ><![CDATA[%dw 2.0
output application/json
---
read(payload.parts.'EDIMsgHeader'.content,"application/json")]]></ee:set-variable>
			

</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Parse EDIMsgHeader To Json" doc:id="ffc6bad1-0a55-49b3-a1bf-3b7245b0f355">
			<ee:message />
			<ee:variables>
				<ee:set-variable resource="dwl/eventAuditMessage.dwl" variableName="eventAuditMessage" />
			

</ee:variables>
		</ee:transform>
		<json-logger:logger doc:name="Log - Initial status" doc:id="a1c05f5d-f5f2-42eb-a165-d2433ab61e64" config-ref="JSON_Logger_Config" message='#["Start of the transaction for correlation Id " ++ vars.TransactionID]' correlationId="#[vars.TransactionID]">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.eventAuditMessage) 
}]]]></json-logger:content>

		</json-logger:logger>
		<flow-ref doc:name="Decompress file" doc:id="a18ccec4-f72f-470a-9d1a-598d6eb8d6c1" name="sgst-mm-edi-eapi-impl_decompress-flow" />
		<async doc:name="Async Call" doc:id="2dff04a0-c092-4dd7-903f-308979806df7" >
			<flow-ref doc:name="Backup file in PCS" doc:id="916db69b-a895-41ec-b6d3-8b50a910fe05" name="sgst-mm-edi-impl-api-impl-backUp-flow" />
		</async>
		<flow-ref doc:name="Post File to SAPI" doc:id="84c3c8ce-b26b-417d-a9f9-1ad2d89e4d4e" name="sgst-mm-edi-eapi-impl-sapi-flow" />
		<ee:transform doc:name="Frame - Response" doc:id="ddd94fd7-b0c7-4959-afe2-ccb070b0aade">
			<ee:message>
				<ee:set-payload resource="dwl/responsePayload.dwl" />
			</ee:message>
		</ee:transform>
		<json-logger:logger doc:name="Log Success Response" doc:id="51cb550d-ac2d-4f2b-b657-6f20bc876eba" config-ref="JSON_Logger_Config" message='#["End of the transaction for correlation Id " ++ vars.TransactionID]' tracePoint="END">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.eventAuditMessage) 
}]]]></json-logger:content>
		</json-logger:logger>
	</sub-flow>
</mule>
